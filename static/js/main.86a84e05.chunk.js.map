{"version":3,"sources":["components/HomeHeader.js","components/ShelfSelector.js","services/BooksAPI.js","helpers/BookHelper.js","components/Book.js","components/BookGrid.js","components/Shelf.js","components/OpenSearch.js","components/Home.js","components/Search.js","App.js","index.js"],"names":["HomeHeader","_ref","title","url","useRouteMatch","react_default","a","createElement","react_router_dom","to","style","textDecoration","className","ShelfSelector","shelf","shelves","onUpdate","shelvesKeys","Object","keys","_useState","useState","_useState2","slicedToArray","selectorState","setSelectorState","closeSelector","onClick","event","newShelf","target","getAttribute","onMouseLeave","key","value","map","_shelf","_","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","fetch","concat","id","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","makeValidBook","b","authors","imageLinks","thumbnail","Book","_book","setBook","handleBook","entries","forEach","_ref2","indexOf","setBookShelf","useEffect","bookId","data","Fragment","width","height","backgroundImage","components_ShelfSelector","BookGrid","books","i","components_Book","Shelf","hash","active","setActive","location","useLocation","pathname","index_es","icon","faChevronUp","faChevronDown","components_BookGrid","OpenSearch","Home","components_HomeHeader","_ref3","components_Shelf","components_OpenSearch","keyWords","Search","query","setQuery","_useState3","_useState4","setBooks","_useState5","_useState6","searching","setSearching","debounceSearchBooks","BooksAPI","error","sanitiseBooks","onUpdateShelf","filter","toConsumableArray","renderNoQuery","renderNoMatch","word","type","placeholder","onChange","currentTarget","length","BooksApp","setShelves","_shelves","react_router","exact","path","components_Home","components_Search","ReactDOM","render","src_App","document","getElementById"],"mappings":"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,CAAUd,MAAOA,EAAOtE,QAASA,EAASC,SAAUA,OCjCzCoF,EARI,kBAClB/F,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACdP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI,WACTJ,EAAAC,EAAAC,cAAA,kBCsBY8F,EAvBF,SAAApG,GAA2B,IAAxBc,EAAwBd,EAAxBc,QAASC,EAAef,EAAfe,SAExB,OACCX,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACdP,EAAAC,EAAAC,cAAC+F,EAAD,CAAYpG,MAAK,aACjBG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBACdP,EAAAC,EAAAC,cAAA,WACEW,OAAOqD,QAAQxD,GAASoB,IAAI,SAAAsC,GAAA,IAAA8B,EAAArF,OAAAK,EAAA,EAAAL,CAAAuD,EAAA,GAAE3D,EAAFyF,EAAA,GAASlB,EAATkB,EAAA,UAC5BlG,EAAAC,EAAAC,cAACiG,EAAD,CACCvE,IAAKnB,EACLA,MAAOA,EACPuE,MAAOA,EACPtE,QAASA,EACTC,SAAUA,QAKdX,EAAAC,EAAAC,cAACkG,EAAD,gBChBGC,EAAW,CAChB,UACA,MACA,0BACA,YACA,SACA,WACA,aACA,SACA,YACA,QACA,WACA,QACA,YACA,WACA,WACA,SACA,OACA,UACA,UACA,QACA,SACA,cACA,oBACA,QACA,UACA,QACA,YACA,aACA,UACA,OACA,UACA,QACA,UACA,WACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,UACA,QACA,OACA,SACA,UACA,QACA,mBACA,OACA,SACA,UACA,QACA,UACA,YACA,WACA,aACA,cACA,SACA,aACA,cACA,QACA,QACA,QACA,WACA,UACA,SACA,kBACA,cACA,QACA,WACA,OACA,QACA,OACA,UACA,SACA,WACA,kBACA,kBACA,OA8GcC,EA3GA,SAAA1G,GAA2B,IAAxBc,EAAwBd,EAAxBc,QAASC,EAAef,EAAfe,SAAeI,EACfC,mBAAS,IADMC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAE,EAAA,GAClCwF,EADkCtF,EAAA,GAC3BuF,EAD2BvF,EAAA,GAAA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","file":"static/js/main.86a84e05.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nconst HomeHeader = ({ title }) => {\n    let { url } = useRouteMatch()\n\n    return (\n        <Link to={url} style={{ textDecoration: 'none' }}>\n            <div className=\"list-books-title\">\n                <h1>{title}</h1>\n            </div>\n        </Link>\n    )\n}\n\nHomeHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default HomeHeader\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport * as _ from 'lodash'\n\nconst OPEN = 'OPEN'\nconst CLOSED = 'CLOSED'\n/**\n * Displays a list of 'shelves' where a given 'shelf' is marked with a tick.\n * On the user selecting one of the shelf labels, it calls onUpdate with the shelf ID corresponding to the selected shelf label.\n */\nconst ShelfSelector = ({ shelf, shelves, onUpdate }) => {\n\tconst shelvesKeys = Object.keys(shelves)\n\n\tconst [selectorState, setSelectorState] = useState(CLOSED)\n\n\tconst closeSelector = () => {\n\t\tsetSelectorState(CLOSED)\n\t}\n\n\tconst openSelector = () => {\n\t\tsetSelectorState(OPEN)\n\t}\n\n\tconst toggleSelector = () => {\n\t\treturn selectorState === OPEN ? closeSelector() : openSelector()\n\t}\n\n\treturn (\n\t\t<div className=\"book-shelf-changer\" onClick={toggleSelector}>\n\t\t\t{/* select replaced by ul to allow marking the selected item with a checkbox */}\n\t\t\t<ul\n\t\t\t\tclassName={selectorState === CLOSED ? 'hidden' : 'dropdown'}\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\tconst newShelf = event.target.getAttribute('value')\n\t\t\t\t\tonUpdate(newShelf)\n\t\t\t\t}}\n\t\t\t\tonMouseLeave={closeSelector}\n\t\t\t>\n\t\t\t\t<li className=\"book-shelf-menu-title\" key={'move'} value={'move'}>\n\t\t\t\t\t{'Move to...'}\n\t\t\t\t</li>\n\t\t\t\t{shelvesKeys.map((_shelf) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={shelf === _shelf ? 'checked' : ''}\n\t\t\t\t\t\tkey={_shelf}\n\t\t\t\t\t\tvalue={_shelf}\n\t\t\t\t\t>\n\t\t\t\t\t\t{_.startCase(_shelf)}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t<li\n\t\t\t\t\tkey={'none'}\n\t\t\t\t\tvalue={'none'}\n\t\t\t\t\tclassName={shelf === 'none' ? 'checked' : ''}\n\t\t\t\t>\n\t\t\t\t\t{'None'}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nShelfSelector.propTypes = {\n\tshelf: PropTypes.string,\n\tshelves: PropTypes.object.isRequired,\n\tonUpdate: function (props, propName, componentName) {\n\t\tvar fn = props[propName]\n\t\tif (\n\t\t\t!fn.prototype ||\n\t\t\t(typeof fn.prototype.constructor !== 'function' &&\n\t\t\t\tfn.prototype.constructor.length !== 1)\n\t\t) {\n\t\t\treturn new Error(\n\t\t\t\t`${componentName}.${propName} must be a function with 1 argument.`\n\t\t\t)\n\t\t}\n\t},\n}\nexport default ShelfSelector\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","\nconst makeValidBook = (b) => {\n    if (!b.title) {\n        b.title = ''\n    }\n    if (!b.authors) {\n        b.authors = ''\n    }\n    if (!b.imageLinks || !b.imageLinks.thumbnail) {\n        b.imageLinks = { thumbnail: '' }\n    }\n}\n\nconst sanitiseBooks = (books) => { \n    if (!books) {\n        return []\n    }\n\n    return { ...books.map(book => makeValidBook(book)) }\n}\n\nconst setBookShelf = (book, shelves) => {\n    book.shelf = 'none'\n    Object.entries(shelves).forEach(([shelf, books]) => {\n        if (books.indexOf(book.id) >= 0) {\n            book.shelf = shelf\n        }\n    })\n}\n\nexport { makeValidBook, sanitiseBooks, setBookShelf}","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport ShelfSelector from './ShelfSelector'\nimport { get } from '../services/BooksAPI'\nimport { makeValidBook, setBookShelf} from '../helpers/BookHelper'\n\n/**\n * Displays a Book and its ShelfSelector.\n */\nconst Book = ({ book, shelves, onUpdate }) => {\n\tconst [_book, setBook] = useState('')\n\n\tconst handleBook = (book) => {\n\t\tmakeValidBook(book)\n\t\tsetBookShelf(book, shelves)\n\t\tsetBook(book)\n\t}\n\n\tuseEffect(() => {\n\t\tif (typeof book !== 'string') {\n\t\t\thandleBook(book)\n\t\t} else {\n\t\t\tget(book).then((b) => {\n\t\t\t\thandleBook(b)\n\t\t\t})\n\t\t}\n\t}, [book, shelves])\n\n\treturn (\n\t\t<div className=\"book\">\n\t\t\t{typeof _book !== 'string' && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"book-top\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"book-cover\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: 128,\n\t\t\t\t\t\theight: 193,\n\t\t\t\t\t\tbackgroundImage: `url(${_book.imageLinks.thumbnail})`,\n\t\t\t\t\t}}\n\t\t\t\t\t></div>\n\t\t\t\t\t<ShelfSelector\n\t\t\t\t\t\tshelf={_book.shelf}\n\t\t\t\t\t\tshelves={shelves}\n\t\t\t\t\t\tonUpdate={(shelf) => {\n\t\t\t\t\t\t\tonUpdate(_book.id, shelf)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"book-title\">{`${_book.title}`}</div>\n\t\t\t\t\t<div className=\"book-authors\">{`${_book.authors.toString()}`}</div>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nBook.propTypes = {\n\tbook: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n\tshelves: PropTypes.object.isRequired,\n\tonUpdate: function (props, propName, componentName) {\n\t\tvar fn = props[propName]\n\t\tif (\n\t\t\t!fn.prototype ||\n\t\t\t(typeof fn.prototype.constructor !== 'function' &&\n\t\t\t\tfn.prototype.constructor.length !== 2)\n\t\t) {\n\t\t\treturn new Error(\n\t\t\t\t`${componentName}.${propName} must be a function with 2 argument.`\n\t\t\t)\n\t\t}\n\t},\n}\n\nexport default Book\n","import React from 'react'\nimport Book from './Book'\n\nconst BookGrid = ({ books, shelves, onUpdate }) => {\n\n\treturn (\n\t\t<ol className=\"books-grid\">\n\t\t\t{books.map((b, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<Book book={b} shelves={shelves} onUpdate={onUpdate} />\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ol>\n\t)\n}\n\nexport default BookGrid\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport * as _ from 'lodash'\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom'\nimport BookGrid from './BookGrid'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\n\n/**\n * Displays a grid of Book components.\n *\n */\nconst Shelf = ({ shelf, books, shelves, onUpdate }) => {\n\tconst hash = `#${_.kebabCase(shelf)}`\n\n\tconst [active, setActive] = useState(false)\n\n\tlet { url } = useRouteMatch()\n\n\tlet location = useLocation()\n\n\tuseEffect(() => {\n\t\tif (location.hash === hash) {\n\t\t\tsetActive(true)\n\t\t} else {\n\t\t\tsetActive(false)\n\t\t}\n\t}, [location, active])\n\n\treturn (\n\t\t<div className=\"bookshelf\">\n\t\t\t<Link\n\t\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t\t\tto={{\n\t\t\t\t\tpathname: url,\n\t\t\t\t\thash: active ? '' : hash,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<h2 className=\"bookshelf-title\">\n\t\t\t\t\t{_.startCase(shelf) + ' '}\n\t\t\t\t\t<FontAwesomeIcon icon={active ? faChevronUp : faChevronDown} />\n\t\t\t\t</h2>\n\t\t\t</Link>\n\t\t\t<div className={`${'bookshelf-books ' + (active ? '' : 'hidden')}`}>\n\t\t\t\t<BookGrid books={books} shelves={shelves} onUpdate={onUpdate} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nShelf.propTypes = {\n\tshelf: PropTypes.string.isRequired,\n\tshelves: PropTypes.object.isRequired,\n\tbooks: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\tonUpdate: function (props, propName, componentName) {\n\t\tvar fn = props[propName]\n\t\tif (\n\t\t\t!fn.prototype ||\n\t\t\t(typeof fn.prototype.constructor !== 'function' &&\n\t\t\t\tfn.prototype.constructor.length !== 2)\n\t\t) {\n\t\t\treturn new Error(\n\t\t\t\t`${componentName}.${propName} must be a function with 2 argument.`\n\t\t\t)\n\t\t}\n\t},\n}\n\nexport default Shelf\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst OpenSearch = () => (\n\t<div className=\"open-search\">\n\t\t<Link to={'/search'}>\n\t\t\t<button></button>\n\t\t</Link>\n\t</div>\n)\n\nexport default OpenSearch\n","import React from 'react'\nimport HomeHeader from './HomeHeader'\nimport Shelf from './Shelf'\nimport OpenSearch from './OpenSearch'\n\nconst Home = ({ shelves, onUpdate }) => {\n\t\n\treturn (\n\t\t<div className=\"list-books\">\n\t\t\t<HomeHeader title={`My Reads`} />\n\t\t\t<div className=\"list-books-content\">\n\t\t\t\t<div>\n\t\t\t\t\t{Object.entries(shelves).map(([shelf, books]) => (\n\t\t\t\t\t\t<Shelf\n\t\t\t\t\t\t\tkey={shelf}\n\t\t\t\t\t\t\tshelf={shelf}\n\t\t\t\t\t\t\tbooks={books}\n\t\t\t\t\t\t\tshelves={shelves}\n\t\t\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<OpenSearch />\n\t\t</div>\n\t)\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../services/BooksAPI'\nimport * as _ from 'lodash'\nimport BookGrid from './BookGrid'\nimport { sanitiseBooks } from '../helpers/BookHelper'\n\nconst keyWords = [\n\t'Android',\n\t'Art',\n\t'Artificial Intelligence',\n\t'Astronomy',\n\t'Austen',\n\t'Baseball',\n\t'Basketball',\n\t'Bhagat',\n\t'Biography',\n\t'Brief',\n\t'Business',\n\t'Camus',\n\t'Cervantes',\n\t'Christie',\n\t'Classics',\n\t'Comics',\n\t'Cook',\n\t'Cricket',\n\t'Cycling',\n\t'Desai',\n\t'Design',\n\t'Development',\n\t'Digital Marketing',\n\t'Drama',\n\t'Drawing',\n\t'Dumas',\n\t'Education',\n\t'Everything',\n\t'Fantasy',\n\t'Film',\n\t'Finance',\n\t'First',\n\t'Fitness',\n\t'Football',\n\t'Future',\n\t'Games',\n\t'Gandhi',\n\t'Homer',\n\t'Horror',\n\t'Hugo',\n\t'Ibsen',\n\t'Journey',\n\t'Kafka',\n\t'King',\n\t'Lahiri',\n\t'Larsson',\n\t'Learn',\n\t'Literary Fiction',\n\t'Make',\n\t'Manage',\n\t'Marquez',\n\t'Money',\n\t'Mystery',\n\t'Negotiate',\n\t'Painting',\n\t'Philosophy',\n\t'Photography',\n\t'Poetry',\n\t'Production',\n\t'Programming',\n\t'React',\n\t'Redux',\n\t'River',\n\t'Robotics',\n\t'Rowling',\n\t'Satire',\n\t'Science Fiction',\n\t'Shakespeare',\n\t'Singh',\n\t'Swimming',\n\t'Tale',\n\t'Thrun',\n\t'Time',\n\t'Tolstoy',\n\t'Travel',\n\t'Ultimate',\n\t'Virtual Reality',\n\t'Web Development',\n\t'iOS',\n]\n\nconst Search = ({ shelves, onUpdate }) => {\n\tconst [query, setQuery] = useState('')\n\tconst [books, setBooks] = useState([])\n\tconst [searching, setSearching] = useState(false)\n\n\tconst handleSearch = (query) => {\n\t\tsetSearching(true)\n\t\tsetQuery(query)\n\t}\n\n\tconst searchBooks = (query) => {\n\t\tBooksAPI.search(query).then((books) => {\n\t\t\tif (!books || books.error) {\n\t\t\t\tsetBooks([])\n\t\t\t} else {\n\t\t\t\tsanitiseBooks(books)\n\t\t\t\tsetBooks(books)\n\t\t\t}\n\t\t\tsetSearching(false)\n\t\t})\n\t}\n\n\tconst debounceSearchBooks = _.debounce(searchBooks, 250)\n\n\tuseEffect(() => {\n\t\tdebounceSearchBooks(query)\n\t}, [query])\n\n\tconst onUpdateShelf = (bookId, shelf) => {\n\t\tbooks.filter((b) => b.id === bookId).map((b) => (b.shelf = shelf))\n\t\tsetBooks([...books])\n\t\tonUpdate(bookId, shelf)\n\t}\n\n\tconst renderBooks = () => {\n\t\treturn (\n\t\t\t<div className=\"search-books-results\">\n\t\t\t\t<BookGrid books={books} shelves={shelves} onUpdate={onUpdateShelf} />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderNoBooks = () => {\n\t\treturn query.length === 0 ? renderNoQuery() : renderNoMatch()\n\t}\n\n\tconst renderNoQuery = () => {\n\t\treturn (\n\t\t\t<div className=\"search-books-message\">\n\t\t\t\t<p>Type above to search.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderNoMatch = () => {\n\t\treturn (\n\t\t\t<div className=\"search-books-message\">\n\t\t\t\t<p>No books match your search!</p>\n\t\t\t\t<p>Suggestions:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t{keyWords.map((word) => {\n\t\t\t\t\t\treturn <li key={word}>{word}</li>\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderSearching = () => {\n\t\treturn (\n\t\t\t<div className=\"search-books-message\">\n\t\t\t\t<p>Searching...</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst renderResults = () => {\n\t\tif (searching) {\n\t\t\treturn renderSearching()\n\t\t} else if (books && books.length > 0) {\n\t\t\treturn renderBooks()\n\t\t} else {\n\t\t\treturn renderNoBooks()\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"search-books\">\n\t\t\t<div className=\"search-books-bar\">\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<button className=\"close-search\"></button>\n\t\t\t\t</Link>\n\n\t\t\t\t<div className=\"search-books-input-wrapper\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search by title or author\"\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={(event) => handleSearch(event.currentTarget.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{renderResults()}\n\t\t</div>\n\t)\n}\n\nexport default Search\n\n/*\nNOTES: The search from BooksAPI is limited to a particular set of search terms.\nYou can find these search terms here:\nhttps://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\nHowever, remember that the BooksAPI.search method DOES search by title or author. \nSo, don't worry if you don't find a specific author or title. \nEvery search is limited by search terms.\n*/\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Search from './components/Search'\nimport * as BooksAPI from './services/BooksAPI'\nimport { BrowserRouter } from 'react-router-dom'\n\n/**\n * The starting point of this App.\n */\nconst BooksApp = () => {\n\tconst [shelves, setShelves] = useState({})\n\n\tuseEffect(() => {\n\t\tBooksAPI.update('-1', 'none').then((_shelves) => {\n\t\t\tsetShelves(_shelves)\n\t\t})\n\t}, [])\n\n\tconst onUpdate = (_book, _shelf) => {\n\t\tBooksAPI.update({ id: _book }, _shelf).then((_shelves) => {\n\t\t\tsetShelves(_shelves)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home shelves={shelves} onUpdate={onUpdate} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/search\">\n\t\t\t\t\t\t<Search shelves={shelves} onUpdate={onUpdate} />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t)\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}